{"version":3,"sources":["components/theme.js","components/themeSwitch.js"],"names":["dmx","Component","initialData","theme","attributes","key","type","String","default","enum","methods","setTheme","this","props","update","render","_changeHandler","bind","_mediaQuery","window","matchMedia","addEventListener","_getStoredTheme","_update","beforeDestroy","removeEventListener","_setStoredTheme","document","documentElement","setAttribute","matches","set","event","localStorage","getItem","setItem","icons","manager","events","change","Event","node","_icons","bi","auto","check","dark","light","fa","_prefix","id","isNavItem","classList","contains","parentNode","add","innerHTML","querySelectorAll","forEach","toggle","getAttribute","_setTheme","data","querySelector","focus","parse","$node","element","remove","activeThemeIcon","Object","values","cls","apply","split","dispatchEvent"],"mappings":"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","file":"dmxBootstrap5Theme1.js","sourcesContent":["dmx.Component('bs5-theme', {\r\n  initialData: {\r\n    theme: 'auto',\r\n  },\r\n\r\n  attributes: {\r\n    key: {\r\n      type: String,\r\n      default: 'theme',\r\n    },\r\n\r\n    theme: {\r\n      type: String,\r\n      default: 'auto',\r\n      enum: ['auto', 'light', 'dark'],\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    setTheme: function(theme) {\r\n      this.props.theme = theme;\r\n      this.update();\r\n    },\r\n  },\r\n\r\n  render: function() {\r\n    this._changeHandler = this._changeHandler.bind(this);\r\n    this._mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    this._mediaQuery.addEventListener('change', this._changeHandler);\r\n    this.props.theme = this._getStoredTheme() || this.props.theme;\r\n    this._update();\r\n  },\r\n\r\n  beforeDestroy: function() {\r\n    this._mediaQuery.removeEventListener('change', this._changeHandler);\r\n  },\r\n\r\n  update: function() {\r\n    this._setStoredTheme(this.props.theme);\r\n    this._update();\r\n  },\r\n  \r\n  _update: function() {\r\n    if (this.props.theme === 'auto') {\r\n      document.documentElement.setAttribute('data-bs-theme', this._mediaQuery.matches ? 'dark' : 'light');\r\n    } else {\r\n      document.documentElement.setAttribute('data-bs-theme', this.props.theme);\r\n    }\r\n\r\n    this.set('theme', this.props.theme);\r\n  },\r\n\r\n  _changeHandler: function(event) {\r\n    this._update();\r\n  },\r\n\r\n  _getStoredTheme: function() {\r\n    return localStorage.getItem(this.props.key);\r\n  },\r\n\r\n  _setStoredTheme: function(theme) {\r\n    localStorage.setItem(this.props.key, theme);\r\n  },\r\n\r\n});","dmx.Component('bs5-theme-switch', {\r\n\r\n  initialData: {\r\n    theme: 'auto',\r\n  },\r\n\r\n  attributes: {\r\n    icons: {\r\n      type: String,\r\n      default: 'bi',\r\n      enum: ['bi', 'fa'],\r\n    },\r\n\r\n    manager: {\r\n      type: String,\r\n      default: '',\r\n    }\r\n  },\r\n\r\n  events: {\r\n    change: Event,\r\n  },\r\n\r\n  render: function(node) {\r\n    this._icons = {\r\n      bi: {\r\n        auto: 'bi-circle-half',\r\n        check: 'bi-check2',\r\n        dark: 'bi-moon-stars-fill',\r\n        light: 'bi-sun-fill',\r\n      },\r\n      fa: {\r\n        auto: 'fa-adjust',\r\n        check: 'fa-check',\r\n        dark: 'fa-moon fa-moon-o',\r\n        light: 'fa-sun fa-sun-o',\r\n      },\r\n    };\r\n\r\n    this._prefix = node.id;\r\n\r\n    const icons = this._icons[this.props.icons];\r\n    const isNavItem = node.classList.contains('nav-item') || node.parentNode.classList.contains('nav-item');\r\n\r\n    node.classList.add('dropdown');\r\n\r\n    node.innerHTML = `\r\n      <button class=\"btn ${isNavItem ? 'btn-link nav-link' : 'btn-primary'} py-2 dropdown-toggle d-flex align-items-center\" id=\"${this._prefix}-theme\" type=\"button\" aria-expanded=\"false\" data-bs-toggle=\"dropdown\" aria-label=\"Toggle theme (auto)\">\r\n        <i class=\"${this.props.icons} ${icons.auto} ${this.props.icons == 'fa' ? 'my-1' : ''} theme-icon-active\"></i>\r\n        <span class=\"visually-hidden\" id=\"${this._prefix}-theme-text\">Toggle theme</span>\r\n      </button>\r\n      <ul class=\"dropdown-menu dropdown-menu-end\" aria-labelledby=\"${this._prefix}-theme-text\">\r\n        <li>\r\n          <button type=\"button\" class=\"dropdown-item d-flex align-items-center\" data-bs-theme-value=\"light\" aria-pressed=\"false\">\r\n            <i class=\"${this.props.icons} ${icons.light} me-2 opacity-50\"></i>\r\n            Light\r\n            <i class=\"${this.props.icons} ${icons.check} ms-auto d-none\"></i>\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <button type=\"button\" class=\"dropdown-item d-flex align-items-center\" data-bs-theme-value=\"dark\" aria-pressed=\"false\">\r\n            <i class=\"${this.props.icons} ${icons.dark} me-2 opacity-50\"></i>\r\n            Dark\r\n            <i class=\"${this.props.icons} ${icons.check} ms-auto d-none\"></i>\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <button type=\"button\" class=\"dropdown-item d-flex align-items-center\" data-bs-theme-value=\"auto\" aria-pressed=\"true\">\r\n            <i class=\"${this.props.icons} ${icons.auto} me-2 opacity-50\"></i>\r\n            Auto\r\n            <i class=\"${this.props.icons} ${icons.check} ms-auto d-none\"></i>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    `;\r\n\r\n    node.querySelectorAll('[data-bs-theme-value]').forEach(toggle => {\r\n      toggle.addEventListener('click', () => {\r\n        \tthis.set('theme', toggle.getAttribute('data-bs-theme-value'));\r\n          this._setTheme(this.data.theme);\r\n          node.querySelector(`#${this._prefix}-theme`).focus();\r\n      });\r\n    });\r\n\r\n    this.update();\r\n  },\r\n\r\n  update: function(props) {\r\n    const icons = this._icons[this.props.icons];\r\n\r\n    this.set('theme', dmx.parse(`${this.props.manager}.theme`, this));\r\n\r\n    this.$node.querySelectorAll('[data-bs-theme-value]').forEach(element => {\r\n      if (element.getAttribute('data-bs-theme-value') === this.data.theme) {\r\n        element.classList.add('active');\r\n        element.setAttribute('aria-pressed', 'true');\r\n        element.querySelector('.' + icons.check).classList.remove('d-none');\r\n      } else {\r\n        element.classList.remove('active');\r\n        element.setAttribute('aria-pressed', 'false');\r\n        element.querySelector('.' + icons.check).classList.add('d-none');\r\n      }\r\n    });\r\n\r\n    const activeThemeIcon = this.$node.querySelector('.theme-icon-active');\r\n    Object.values(icons).forEach(cls => activeThemeIcon.classList.remove.apply(activeThemeIcon.classList, cls.split(' ')));\r\n    activeThemeIcon.classList.add.apply(activeThemeIcon.classList, icons[this.data.theme].split(' '));\r\n    \r\n    const themeSwitcher = this.$node.querySelector(`#${this._prefix}-theme`);\r\n    themeSwitcher.setAttribute('aria-label', `Toggle theme (${this.data.theme})`);\r\n  },\r\n\r\n  _setTheme: function(theme) {\r\n    if (this.props.manager) {\r\n      dmx.parse(`${this.props.manager}.setTheme(\"${theme}\")`, this);\r\n    }\r\n    this.dispatchEvent('change', {}, { theme });\r\n  },\r\n\r\n});"]}